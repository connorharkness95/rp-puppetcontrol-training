# This data file is applied to instances classified with the puppet_server role
# in the production tier of your environment. This is the default for puppet
# masters deployed using the rap-terraform-puppetserver module.

---
classes:
  - role::puppet_server

hiera::hierarchy:
  - "production/environments/%{literal('%')}{::environment}"
  - "production/global"
  - "%%{%}{::environment}/instance_classification/%%{%}{::instance_tier}/applications/%%{%}{::instance_application}"
  - "%%{%}{::environment}/instance_classification/%%{%}{::instance_tier}/roles/%%{%}{::instance_role}"
  - "%%{%}{::environment}/instance_classification/%%{%}{::instance_tier}/common"
  - "%%{%}{::environment}/common"

hiera::master_service: 'puppetserver'
hiera::provider: 'puppetserver_gem'
hiera::hiera_yaml: '/etc/puppetlabs/code/hiera.yaml'
hiera::puppet_conf_manage: false
hiera::datadir: '/etc/puppetlabs/code/hiera'
hiera::datadir_manage: false
hiera::eyaml_extension: 'yaml'
hiera::eyaml_version: '2.1.0'
hiera::eyaml: true

puppetdb::globals:version: "4.3.0-1.el7"
puppetdb::master::config::puppetdb_server: "puppet"
puppetdb::master::config::puppet_confdir: "/etc/puppetlabs/puppet"
puppetdb::master::config::puppet_conf: "/etc/puppetlabs/puppet/puppet.conf"
puppetdb::master::config::manage_report_processor: true
puppetdb::master::config::enable_reports: true
puppetdb::server::database_host: "%{::puppetdb_address}"
puppetdb::server::database_username: "%{::puppetdb_user}"
puppetdb::server::database_password: "%{::puppetdb_password}"
puppetdb::server::manage_firewall: false

python::pip: 'latest'
python::python_pips:
  "pypuppetdb":
    ensure: '0.3.1'
  "boto3":
    ensure: '1.4.2'
  "botocore":
    ensure: '1.4.87'
  "awscli":
    ensure: '1.10.38'

profile::puppet_server::monit_checks:
  'puppetserver':
    content: >
      check process puppetserver with pidfile /var/run/puppetlabs/puppetserver/puppetserver.pid
      start program = "/usr/bin/systemctl start puppetserver.service" with timeout 60 seconds
      stop program = "/usr/bin/systemctl stop puppetserver.service"
      if failed host 127.0.0.1 port 8140 type tcp for 2 cycles then restart
      if 5 restarts within 5 cycles then timeout
  'puppetdb':
    content: >
      check process puppetdb with pidfile /var/run/puppetlabs/puppetdb/puppetdb.pid
      start program = "/usr/bin/systemctl start puppetdb.service" with timeout 60 seconds
      stop program = "/usr/bin/systemctl stop puppetdb.service"
      if failed host 127.0.0.1 port 8081 type tcp for 2 cycles then restart
      if 5 restarts within 5 cycles then timeout

# Provide standard EC2 per-instance CloudWatch metrics indicating the status of
# critical Puppet Server services. These checks use a custom module to query
# the service API status endpoints.
cloudwatch::metric_data:
 'prod-puppet-servicestatus-puppetserver':
    folder_name: '/usr/local/sbin'
    template_name: 'puppetserver-health-check.py'
    template_dir: '/usr/local/sbin'
    cron_name: 'puppet-servicestatus-puppetserver'
    cron_cmd: '/usr/local/sbin/puppetserver-health-check.py --service puppetserver'
    cron_hour: '*'
    cron_minute: '*/5'
    template_mode: '0755'
    template_content: 'cloudwatch/puppetserver-health-check.py'
 'prod-puppet-servicestatus-puppetdb':
    template_create: false
    cron_name: 'puppet-servicestatus-puppetdb'
    cron_cmd: '/usr/local/sbin/puppetserver-health-check.py --service puppetdb'
    cron_hour: '*'
    cron_minute: '*/5'

# Associates an alarm to trigger if a critical Puppet Server service reports
# a non-functional status. A value of 1 indicates the service is functioning
# properly, a status of 0 indicates the service is unhealthy or offline.
#
# NOTE: These alarms have no defined ALARM or OK action. You will need to
# associate an SNS topic ARN with each alarm action before alerts will be sent.
cloudwatch::metric_alarm:
  prod-puppet-servicestatus-puppetserver:
    metric: 'PuppetServiceStatus-PuppetServer'
    dimensions: 'Name=InstanceId,Value=%{::ec2_metadata.instance-id}'
    namespace: 'AWS/EC2'
    statistic: 'Maximum'
    period: '300'
    evaluation: '2'
    threshold: '1'
    comparison: 'LessThanThreshold'
    alarm_actions: ''
    ok_actions: ''
  prod-puppet-servicestatus-puppetdb:
    metric: 'PuppetServiceStatus-PuppetDB'
    dimensions: 'Name=InstanceId,Value=%{::ec2_metadata.instance-id}'
    namespace: 'AWS/EC2'
    statistic: 'Maximum'
    period: '300'
    evaluation: '2'
    threshold: '1'
    comparison: 'LessThanThreshold'
    alarm_actions: ''
    ok_actions: ''
