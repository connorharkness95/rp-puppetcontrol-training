# This data file is applied to instances classified with the puppet_server role
# in the production tier of your environment. This is the default for puppet
# masters deployed using the rap-terraform-puppetserver module.

---
classes:
  - role::puppet_server

hiera::hierarchy:
  - "production/environments/%{literal('%')}{::environment}"
  - "production/global"
  - "%%{%}{::environment}/instance_classification/%%{%}{::instance_tier}/applications/%%{%}{::instance_application}"
  - "%%{%}{::environment}/instance_classification/%%{%}{::instance_tier}/roles/%%{%}{::instance_role}"
  - "%%{%}{::environment}/instance_classification/%%{%}{::instance_tier}/common"
  - "%%{%}{::environment}/common"

hiera::master_service: 'puppetserver'
hiera::provider: 'puppetserver_gem'
hiera::hiera_yaml: '/etc/puppetlabs/code/hiera.yaml'
hiera::puppet_conf_manage: false
hiera::datadir: '/etc/puppetlabs/code/hiera'
hiera::datadir_manage: false
hiera::eyaml_extension: 'yaml'
hiera::eyaml_version: '2.1.0'
hiera::eyaml: true

puppetdb::globals:version: "4.3.0-1.el7"
puppetdb::master::config::puppetdb_server: "puppet"
puppetdb::master::config::puppet_confdir: "/etc/puppetlabs/puppet"
puppetdb::master::config::puppet_conf: "/etc/puppetlabs/puppet/puppet.conf"
puppetdb::master::config::manage_report_processor: true
puppetdb::master::config::enable_reports: true
puppetdb::server::database_host: "%{::puppetdb_address}"
puppetdb::server::database_username: "%{::puppetdb_user}"
puppetdb::server::database_password: "%{::puppetdb_password}"
puppetdb::server::manage_firewall: false

python::pip: 'latest'
python::python_pips:
  "pypuppetdb":
    ensure: '0.3.1'
  "boto3":
    ensure: '1.4.2'
  "botocore":
    ensure: '1.4.87'
  "awscli":
    ensure: '1.10.38'

profile::puppet_server::monit_checks:
  'puppetserver':
    content: >
      check process puppetserver with pidfile /var/run/puppetlabs/puppetserver/puppetserver.pid
      start program = "/usr/bin/systemctl start puppetserver.service" with timeout 60 seconds
      stop program = "/usr/bin/systemctl stop puppetserver.service"
      if failed host 127.0.0.1 port 8140 type tcp for 2 cycles then restart
      if 5 restarts within 5 cycles then timeout
  'puppetdb':
    content: >
      check process puppetdb with pidfile /var/run/puppetlabs/puppetdb/puppetdb.pid
      start program = "/usr/bin/systemctl start puppetdb.service" with timeout 60 seconds
      stop program = "/usr/bin/systemctl stop puppetdb.service"
      if failed host 127.0.0.1 port 8081 type tcp for 2 cycles then restart
      if 5 restarts within 5 cycles then timeout
